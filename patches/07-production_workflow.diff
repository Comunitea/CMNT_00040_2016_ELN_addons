=== modified file 'mrp/mrp.py'
--- mrp/mrp.py	2014-02-20 15:38:05 +0000
+++ mrp/mrp.py	2014-11-30 18:06:25 +0000
@@ -817,7 +817,7 @@
                 stock_mov_obj.write(cr, uid, [raw_product.id], {'move_history_ids': [(4,new_parent_id)]})
 
         wf_service = netsvc.LocalService("workflow")
-        wf_service.trg_validate(uid, 'mrp.production', production_id, 'button_produce_done', cr)
+        wf_service.trg_validate(uid, 'mrp.production', production_id, 'button_finished_validated', cr)
         return True
 
     def _costs_generate(self, cr, uid, production):

=== modified file 'mrp_operations/mrp_operations.py'
--- mrp_operations/mrp_operations.py	2012-01-31 13:36:57 +0000
+++ mrp_operations/mrp_operations.py	2014-11-30 18:09:49 +0000
@@ -271,10 +271,10 @@
             context = {}
         for po in self.browse(cr, uid, ids, context=context):
             dt_end = datetime.strptime(po.date_planned, '%Y-%m-%d %H:%M:%S')
-            if not po.date_start:
-                self.write(cr, uid, [po.id], {
-                    'date_start': po.date_planned
-                }, context=context, update=False)
+            #if not po.date_start:
+            #    self.write(cr, uid, [po.id], {
+            #        'date_start': po.date_planned
+            #    }, context=context, update=False)
             old = None
             for wci in range(len(po.workcenter_lines)):
                 wc  = po.workcenter_lines[wci]
@@ -299,9 +299,9 @@
                     dt_end = datetime.strptime(wc.date_planned_end, '%Y-%m-%d %H:%M:%S')
 
                 old = wc.sequence or 0
-            super(mrp_production, self).write(cr, uid, [po.id], {
-                'date_finished': dt_end
-            })
+            #super(mrp_production, self).write(cr, uid, [po.id], {
+            #    'date_finished': dt_end
+            #})
         return dt_end
 
     def _move_pass(self, cr, uid, ids, context=None):
@@ -328,8 +328,8 @@
                                 dt, wc.hour or 0.0
                             )
                             dt = i[0][0]
-                        if l.production_id.date_start > dt.strftime('%Y-%m-%d %H:%M:%S'):
-                            self.write(cr, uid, [l.production_id.id], {'date_start':dt.strftime('%Y-%m-%d %H:%M:%S')}, mini=True)
+                       # if l.production_id.date_start > dt.strftime('%Y-%m-%d %H:%M:%S'):
+                       #     self.write(cr, uid, [l.production_id.id], {'date_start':dt.strftime('%Y-%m-%d %H:%M:%S')}, mini=True)
         return True
 
     def _move_futur(self, cr, uid, ids, context=None):
@@ -347,9 +347,9 @@
                         break
                     if l.production_id.state in ('done','cancel'):
                         break
-                    if l.production_id and (l.production_id.date_start < po.date_finished):
-                        self.write(cr, uid, [l.production_id.id], {'date_start': po.date_finished})
-                        break
+                    #if l.production_id and (l.production_id.date_start < po.date_finished):
+                    #    self.write(cr, uid, [l.production_id.id], {'date_start': po.date_finished})
+                    #    break
         return True
 
 
