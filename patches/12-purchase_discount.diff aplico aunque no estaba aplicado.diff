=== modified file 'purchase_discount/purchase_discount.py'
--- purchase_discount/purchase_discount.py	2012-04-09 17:07:25 +0000
+++ purchase_discount/purchase_discount.py	2014-11-30 19:02:19 +0000
@@ -29,10 +29,8 @@
 
     def _amount_line(self, cr, uid, ids, prop, unknow_none,unknow_dict):
         res = {}
-        cur_obj = self.pool.get('res.currency')
         for line in self.browse(cr, uid, ids):
-            cur = line.order_id.pricelist_id.currency_id
-            res[line.id] = cur_obj.round(cr, uid, cur, line.price_unit * line.product_qty * (1 - (line.discount or 0.0) /100.0))
+            res[line.id] = line.price_unit * line.product_qty * (1 - (line.discount or 0.0) /100.0)
         return res
 
     _columns = {
@@ -62,8 +60,10 @@
             val = val1 = 0.0
             cur = order.pricelist_id.currency_id
             for line in order.order_line:
-                for c in self.pool.get('account.tax').compute(cr, uid, line.taxes_id, line.price_unit * (1-(line.discount or 0.0)/100.0), line.product_qty, order.partner_address_id.id, line.product_id, order.partner_id):
-                    val += c['amount']
+                q = self.pool.get('account.tax').compute_all(cr, uid, line.taxes_id, line.price_unit * (1-(line.discount or 0.0)/100.0), line.product_qty, order.partner_address_id.id, line.product_id, order.partner_id)
+                if q:
+                    for c in q['taxes']:
+                        val += c['amount']
                 val1 += line.price_subtotal
             res[order.id]['amount_tax'] = cur_obj.round(cr, uid, cur, val)
             res[order.id]['amount_untaxed'] = cur_obj.round(cr, uid, cur, val1)

